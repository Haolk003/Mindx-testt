generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  id            String     @id @default(cuid())
  title       String
  description String
  price       Float
  image       String
  sponsorId   Int
  authorId    String
  author      User      @relation(fields: [authorId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  status      String   @default("pending") // pending | approved | rejected
}


model User {
  id            String      @id @default(cuid())
  name          String?
  email         String   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          String   @default("user")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  sessions      Session[]
  accounts      Account[]
  courses       Course[]
  // sponsorships  Sponsorship[]
  // sponsor       Sponsor? @relation(fields: [sponsorId], references: [id])

}

model Account {
  id                String       @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String      @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String      @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
}
